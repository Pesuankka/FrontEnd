[{"C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\index.js":"1","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\App.js":"2","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\reportWebVitals.js":"3","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\customers.js":"4","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\training.js":"5","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\home.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1050,"mtime":1608036431173,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1933,"mtime":1608312212369,"results":"11","hashOfConfig":"8"},{"size":1840,"mtime":1608312185506,"results":"12","hashOfConfig":"8"},{"size":162,"mtime":1608311995049,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1txjxbe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\index.js",[],["29","30"],"C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\App.js",[],"C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\reportWebVitals.js",[],"C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\customers.js",["31","32","33"],"import react, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n\r\nfunction Customers() {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const inputChanged = (event) => {\r\n    setInput(event.target.value);\r\n    console.log(input);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, []);\r\n\r\n  const getCustomers = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCustomers(data.content))\r\n      .catch((err) => console.log(err));\r\n    console.log(customers);\r\n  };\r\n\r\n  const colums = [\r\n    { field: \"firstname\", sortable: true, filter: true, width: 150 },\r\n    { field: \"lastname\", sortable: true, filter: true, width: 150 },\r\n    { field: \"streetaddress\", sortable: true, filter: true, width: 150 },\r\n    { field: \"postcode\", sortable: true, filter: true, width: 150 },\r\n    { field: \"city\", sortable: true, filter: true, width: 150 },\r\n    { field: \"email\", sortable: true, filter: true, width: 150 },\r\n    { field: \"phone\", sortable: true, filter: true, width: 150 },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"ag-theme-material\"\r\n      style={{ height: 400, width: \"55%\", margin: \"auto\" }}\r\n    >\r\n        <TextField\r\n        style={{ marginTop: 10, marginRight: \"80%\", marginBottom: 15 }}\r\n        color=\"primary\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        onInput={inputChanged}\r\n      ></TextField>\r\n      <AgGridReact\r\n        quickFilterText={input}\r\n        rowData={customers}\r\n        columnDefs={colums}\r\n        pagination=\"true\"\r\n        paginationPageSize=\"10\"\r\n      ></AgGridReact>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\training.js",["34","35","36"],"import react, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { IconButton, TextField } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-material.css\";\r\n\r\nfunction Training() {\r\n  const [training, setTraining] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const inputChanged = (event) => {\r\n    setInput(event.target.value);\r\n    console.log(input);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTrainings();\r\n  }, []);\r\n\r\n  const getTrainings = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTraining(data.content))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const columsTraining = [\r\n    {\r\n      sortable: true,\r\n      filter: true,\r\n      width: 150,\r\n      headerName: \"Date\",\r\n      field: \"date\",\r\n      width: 120,\r\n      cellRendererFramework: (element) =>\r\n        moment(element.value).format(\"DD/MM/YYYY\"),\r\n    },\r\n    { field: \"duration\", sortable: true, filter: true, width: 150 },\r\n    { field: \"activity\", sortable: true, filter: true, width: 150 },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"ag-theme-material\"\r\n      style={{ height: 400, width: \"30%\", margin: \"auto\" }}\r\n    >\r\n        <TextField\r\n        style={{ marginTop: 10, marginRight: \"80%\", marginBottom: 15 }}\r\n        color=\"primary\"\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        onInput={inputChanged}\r\n      ></TextField>\r\n      <AgGridReact\r\n        quickFilterText={input}\r\n        rowData={training}\r\n        columnDefs={columsTraining}\r\n        pagination=\"true\"\r\n        paginationPageSize=\"10\"\r\n      ></AgGridReact>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Training;\r\n","C:\\Users\\Pesuankka\\Desktop\\frontEndKurssi\\FrontEnd\\personaltrainer\\src\\components\\home.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":18,"column":6,"nodeType":"48","endLine":18,"endColumn":8,"suggestions":"49"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":35,"column":7,"nodeType":"52","messageId":"53","endLine":35,"endColumn":12},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [getCustomers]",{"range":"59","text":"60"},[549,551],"[getCustomers]"]